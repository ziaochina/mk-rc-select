// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectTrigger renders correctly 1`] = `
<SelectTrigger
  prefixCls="rc-select"
  transitionName="slide"
>
  <Trigger
    action={Array []}
    afterPopupVisibleChange={[Function]}
    blurDelay={0.15}
    builtinPlacements={
      Object {
        "bottomLeft": Object {
          "offset": Array [
            0,
            4,
          ],
          "overflow": Object {
            "adjustX": 0,
            "adjustY": 1,
          },
          "points": Array [
            "tl",
            "bl",
          ],
        },
        "topLeft": Object {
          "offset": Array [
            0,
            -4,
          ],
          "overflow": Object {
            "adjustX": 0,
            "adjustY": 1,
          },
          "points": Array [
            "bl",
            "tl",
          ],
        },
      }
    }
    defaultPopupVisible={false}
    destroyPopupOnHide={false}
    focusDelay={0}
    getDocument={[Function]}
    getPopupClassNameFromAlign={[Function]}
    hideAction={
      Array [
        "click",
      ]
    }
    mask={false}
    maskClosable={true}
    mouseEnterDelay={0}
    mouseLeaveDelay={0.1}
    onPopupAlign={[Function]}
    onPopupVisibleChange={[Function]}
    popup={
      <DropdownMenu
        defaultActiveFirstOption={undefined}
        dropdownMenuStyle={undefined}
        firstActiveValue={undefined}
        inputValue={undefined}
        menuItems={undefined}
        multiple={undefined}
        onMenuDeselect={undefined}
        onMenuSelect={undefined}
        onPopupFocus={undefined}
        prefixCls="rc-select-dropdown"
        value={undefined}
        visible={undefined}
      />
    }
    popupAlign={Object {}}
    popupClassName="rc-select-dropdown--single"
    popupPlacement="bottomLeft"
    popupStyle={Object {}}
    popupTransitionName="slide"
    prefixCls="rc-select-dropdown"
    showAction={
      Array [
        "click",
      ]
    }
    transitionName="slide"
  >
    <div
      id="TriggerContainer"
    >
      <div
        onClick={[Function]}
        onMouseDown={[Function]}
        onTouchStart={[Function]}
      >
        foo
      </div>
    </div>
  </Trigger>
</SelectTrigger>
`;
